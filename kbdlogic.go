package main

import (
	"net/http"
)

// pickKeyboard determines which keyboard layout to show on keyboard page
func pickKeyboard(t *templateHandler, r *http.Request) {
	t.args.Kbd = make([][][]string, 4, 4)
	if r.URL.Query()["v"] != nil {
		v := &r.URL.Query()["v"][0]

		t.args.CurrentPage = "?v=" + *v
		t.args.KbdVer = *v

		switch *v {
		// "10" is default, to be executed regardless of the
		// existence of a version query, so if "10" is passed, skip to the
		// key data defined outside the query existence test
		case "10":
			break
		case "1":
			t.args.Kbd[0] = [][]string{
				{"`", "~", ""},
				{"1", "!", ""},
				{"2", "@", ""},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", "^", ""},
				{"7", "&", ""},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"=", "+", ""},
			}
			t.args.Kbd[1] = [][]string{
				{"ä", "Ä", "final"},
				{"w", "W", ""},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"y", "Y", ""},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"[", "{", ""},
				{"]", "}", ""},
				{"\\", "|", ""},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"ʃ", "Ʃ", "old"},
				{"k", "K", ""},
				{"л", "Л", "old"},
				{";", ":", ""},
				{"'", "\"", ""},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"ʒ", "Ʒ", "old"},
				{"ï", "Ï", "old"},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{",", "<", ""},
				{".", ">", ""},
				{"/", "?", ""},
			}
			return
		case "2":
			t.args.Kbd[0] = [][]string{
				{"`", "~", ""},
				{"1", "!", ""},
				{"2", "@", ""},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", "^", ""},
				{"7", "&", ""},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"=", "+", ""},
			}
			t.args.Kbd[1] = [][]string{
				{"æ", "Æ", "old"},
				{"w", "W", ""},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"y", "Y", ""},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"'", "\"", "old"},
				{"?", "[", "old"},
				{"/", "]", "old"},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"ʃ", "Ʃ", "old"},
				{"k", "K", ""},
				{"λ", "Λ", "old"},
				{"ā", "Ā", "old"},
				{".", ":", "old"},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"ē", "Ē", "old"},
				{"ī", "Ī", "old"},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{"ū", "Ū", "old"},
				{"ʒ", "Ʒ", "old"},
				{",", ";", "old"},
			}
			return

		case "3":
			t.args.Kbd[0] = [][]string{
				{"ð", "Ð", "old"},
				{"1", "!", ""},
				{"2", "/", "old"},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", ":", "old"},
				{"7", "?", "old"},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"'", "\"", "old"},
			}
			t.args.Kbd[1] = [][]string{
				{"æ", "Æ", "old"},
				{"w", "W", ""},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"y", "Y", ""},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"ч", "Ч", "old"},
				{"θ", "Θ", "old"},
				{"=", "+", "old"},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"j", "J", ""},
				{"k", "K", ""},
				{"л", "Л", "old"},
				{"ā", "Ā", "old"},
				{"ʒ", "Ʒ", "old"},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"ē", "Ē", "old"},
				{"ī", "Ī", "old"},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{"ū", "Ū", "old"},
				{"ʃ", "Ʃ", "old"},
				{".", ",", "old"},
			}
			return
		case "4":
			t.args.Kbd[0] = [][]string{
				{"`", "~", ""},
				{"1", "!", ""},
				{"2", "@", ""},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", "^", ""},
				{"7", "&", ""},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"=", "+", ""},
			}
			t.args.Kbd[1] = [][]string{
				{"ä", "Ä", "final"},
				{"w", "W", ""},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"y", "Y", ""},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"[", "{", ""},
				{"]", "}", ""},
				{"\\", "|", ""},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"j", "J", ""},
				{"k", "K", ""},
				{"l", "L", ""},
				{";", ":", ""},
				{"'", "\"", ""},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"ĭ", "Ĭ", "old"},
				{"c", "C", ""},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{",", "<", ""},
				{".", ">", ""},
				{"/", "?", ""},
			}
			return
		case "5":
			t.args.Kbd[0] = [][]string{
				{"`", "~", ""},
				{"1", "!", ""},
				{"2", "@", ""},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", "^", ""},
				{"7", "&", ""},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"=", "+", ""},
			}
			t.args.Kbd[1] = [][]string{
				{"æ", "Æ", "old"},
				{"ū", "Ū", "old"},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"ē", "Ē", "old"},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"[", "{", ""},
				{"]", "}", ""},
				{"\\", "|", ""},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"ā", "Ā", "old"},
				{"k", "K", ""},
				{"л", "Л", "old"},
				{";", ":", ""},
				{"'", "\"", ""},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"ʊ", "Ʊ", "old"},
				{"ī", "Ī", "old"},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{",", "<", ""},
				{".", ">", ""},
				{"/", "?", ""},
			}
			return
		case "6":
			t.args.Kbd[0] = [][]string{
				{"`", "~", ""},
				{"1", "!", ""},
				{"2", "@", ""},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", "^", ""},
				{"7", "&", ""},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"=", "+", ""},
			}
			t.args.Kbd[1] = [][]string{
				{"q", "Q", ""},
				{"w", "W", ""},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"y", "Y", ""},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"[", "{", ""},
				{"]", "}", ""},
				{"\\", "|", ""},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"j", "J", ""},
				{"k", "K", ""},
				{"l", "L", ""},
				{";", ":", ""},
				{"'", "\"", ""},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"x", "X", ""},
				{"c", "C", ""},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{",", "<", ""},
				{".", ">", ""},
				{"/", "?", ""},
			}
			return
		case "7":
			t.args.Kbd[0] = [][]string{
				{"`", "~", ""},
				{"1", "!", ""},
				{"2", "@", ""},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", "^", ""},
				{"7", "&", ""},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"=", "+", ""},
			}
			t.args.Kbd[1] = [][]string{
				{"q", "Q", ""},
				{"w", "W", ""},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"y", "Y", ""},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"[", "{", ""},
				{"]", "}", ""},
				{"\\", "|", ""},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"j", "J", ""},
				{"k", "K", ""},
				{"l", "L", ""},
				{";", ":", ""},
				{"'", "\"", ""},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"x", "X", ""},
				{"c", "C", ""},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{",", "<", ""},
				{".", ">", ""},
				{"/", "?", ""},
			}
			return
		case "8":
			t.args.Kbd[0] = [][]string{
				{"`", "~", ""},
				{"1", "!", ""},
				{"2", "@", ""},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", "^", ""},
				{"7", "&", ""},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"=", "+", ""},
			}
			t.args.Kbd[1] = [][]string{
				{"q", "Q", ""},
				{"w", "W", ""},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"y", "Y", ""},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"[", "{", ""},
				{"]", "}", ""},
				{"\\", "|", ""},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"j", "J", ""},
				{"k", "K", ""},
				{"l", "L", ""},
				{";", ":", ""},
				{"'", "\"", ""},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"x", "X", ""},
				{"c", "C", ""},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{",", "<", ""},
				{".", ">", ""},
				{"/", "?", ""},
			}
			return
		case "9":
			t.args.Kbd[0] = [][]string{
				{"`", "~", ""},
				{"1", "!", ""},
				{"2", "@", ""},
				{"3", "#", ""},
				{"4", "$", ""},
				{"5", "%", ""},
				{"6", "^", ""},
				{"7", "&", ""},
				{"8", "*", ""},
				{"9", "(", ""},
				{"0", ")", ""},
				{"-", "_", ""},
				{"=", "+", ""},
			}
			t.args.Kbd[1] = [][]string{
				{"q", "Q", ""},
				{"w", "W", ""},
				{"e", "E", ""},
				{"r", "R", ""},
				{"t", "T", ""},
				{"y", "Y", ""},
				{"u", "U", ""},
				{"i", "I", ""},
				{"o", "O", ""},
				{"p", "P", ""},
				{"[", "{", ""},
				{"]", "}", ""},
				{"\\", "|", ""},
			}
			t.args.Kbd[2] = [][]string{
				{"a", "A", ""},
				{"s", "S", ""},
				{"d", "D", ""},
				{"f", "F", ""},
				{"g", "G", ""},
				{"h", "H", ""},
				{"j", "J", ""},
				{"k", "K", ""},
				{"l", "L", ""},
				{";", ":", ""},
				{"'", "\"", ""},
			}
			t.args.Kbd[3] = [][]string{
				{"z", "Z", ""},
				{"x", "X", ""},
				{"c", "C", ""},
				{"v", "V", ""},
				{"b", "B", ""},
				{"n", "N", ""},
				{"m", "M", ""},
				{",", "<", ""},
				{".", ">", ""},
				{"/", "?", ""},
			}
			return
		}
	}
	{
		// default (version 10) keyboard if no version query exists or if
		// version query is "10".
		// in its own block so it can be easily collapsed.
		t.args.CurrentPage = "?v=10"
		t.args.KbdVer = "10"

		t.args.Kbd[0] = [][]string{
			{"`", "~", ""},
			{"1", "!", ""},
			{"2", "@", ""},
			{"3", "#", ""},
			{"4", "$", ""},
			{"5", "%", ""},
			{"6", "^", ""},
			{"7", "&", ""},
			{"8", "*", ""},
			{"9", "(", ""},
			{"0", ")", ""},
			{"-", "_", ""},
			{"=", "+", ""},
		}
		t.args.Kbd[1] = [][]string{
			{"ä", "Ä", "final"},
			{"w", "W", ""},
			{"e", "E", ""},
			{"r", "R", ""},
			{"t", "T", ""},
			{"y", "Y", ""},
			{"u", "U", ""},
			{"i", "I", ""},
			{"o", "O", ""},
			{"p", "P", ""},
			{"[", "{", ""},
			{"]", "}", ""},
			{"\\", "|", ""},
		}
		t.args.Kbd[2] = [][]string{
			{"a", "A", ""},
			{"s", "S", ""},
			{"d", "D", ""},
			{"f", "F", ""},
			{"g", "G", ""},
			{"h", "H", ""},
			{"ø", "Ø", "final"},
			{"k", "K", ""},
			{"l", "L", ""},
			{";", ":", ""},
			{"'", "\"", ""},
		}
		t.args.Kbd[3] = [][]string{
			{"z", "Z", ""},
			{"ž", "Ž", "final"},
			{"š", "Š", "final"},
			{"v", "V", ""},
			{"b", "B", ""},
			{"n", "N", ""},
			{"m", "M", ""},
			{",", "<", ""},
			{".", ">", ""},
			{"/", "?", ""},
		}
	}
}
